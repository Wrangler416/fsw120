[{"C:\\Users\\karat\\OneDrive\\Desktop\\dev\\bryanu\\fsw120\\week7\\capstone\\capstone-app\\src\\index.js":"1","C:\\Users\\karat\\OneDrive\\Desktop\\dev\\bryanu\\fsw120\\week7\\capstone\\capstone-app\\src\\App.js":"2"},{"size":151,"mtime":1622334573604,"results":"3","hashOfConfig":"4"},{"size":3367,"mtime":1622335018415,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1yz4um",{"filePath":"9","messages":"10","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\karat\\OneDrive\\Desktop\\dev\\bryanu\\fsw120\\week7\\capstone\\capstone-app\\src\\index.js",[],["12","13"],"C:\\Users\\karat\\OneDrive\\Desktop\\dev\\bryanu\\fsw120\\week7\\capstone\\capstone-app\\src\\App.js",["14","15"],"import React, {useState, useEffect} from \"react\"\r\nimport axios from \"axios\"\r\nimport \"./styles.css\"\r\n\r\nfunction App() {\r\n\r\n  const root = document.getElementById(\"root\")\r\n  \r\n  const [tweet, setTweet] = useState(\"\")\r\n  const [name, setName] = useState(\"\")\r\n  const [edit, setEdit] = useState(\"\")\r\n\r\n  const handleTweetChange = (e) => setTweet(e.target.value)\r\n  const handleNameChange = (e) => setName(e.target.value)\r\n\r\n// PUT method to edit your tweet\r\n\r\nfunction sendEdit(id, value, h1) {\r\n  setEdit(value)\r\n\r\n  axios.put(\"https://api.vschool.io/karatemple2/todo/\" + id, {description: value})\r\n  .then(response => { \r\n    sendTweet(response.data)\r\n    h1.remove()\r\n\r\n  })\r\n  .catch(error => console.log(error))\r\n}\r\n\r\n//Call function responsible for GET method\r\nuseEffect(function() {\r\n  getData()\r\n}, [])\r\n\r\n//GET method \r\nfunction getData() {\r\naxios.get(\"https://api.vschool.io/karatemple2/todo\")\r\n\r\n.then(response => createTweets(response.data))\r\n.catch(error => console.log(error))\r\n}\r\n\r\n\r\n// Create new tweets \r\nfunction createTweets(data) {\r\n\r\n  for(let i = 0; i < data.length; i++) {\r\n        sendTweet(data[i])\r\n  }\r\n}\r\n\r\n// POST AND DELETE METHODS \r\nfunction sendTweet(tweet) {\r\n\r\n    const h1 = document.createElement(\"h1\")\r\n    h1.textContent = tweet.title + \" , \" + tweet.description\r\n    root.appendChild(h1)\r\n  \r\n    const deleteBtn = document.createElement(\"BUTTON\")\r\n    deleteBtn.textContent = \"delete post\"\r\n    deleteBtn.setAttribute(\"id\", \"done\")\r\n    h1.appendChild(deleteBtn)\r\n\r\n    deleteBtn.onclick = function() {\r\n\r\n      console.log(\"delete\")\r\n      axios.delete(\"https://api.vschool.io/karatemple2/todo/\" + tweet._id)\r\n        .then(response => { \r\n          h1.style.display = \"none\"\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n     \r\n  \r\n    const editBtn = document.createElement(\"BUTTON\")\r\n    editBtn.textContent = \"edit your post\"\r\n    h1.appendChild(editBtn)\r\n    editBtn.onclick = function openEdit() {\r\n\r\n      const editInput = document.createElement(\"input\")\r\n      editInput.type= \"text\"\r\n      h1.appendChild(editInput)\r\n      \r\n      const submitEdit = document.createElement(\"button\")\r\n      submitEdit.textContent = \"submit your edit\"\r\n      h1.appendChild(submitEdit)\r\n      submitEdit.onclick=() => sendEdit(tweet._id, editInput.value, h1) \r\n    \r\n    \r\n    }\r\n\r\n    }\r\n  \r\n\r\n  return (\r\n\r\n    <div>\r\n        <form className=\"form\">\r\n            <input \r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"tweet\"\r\n              value={tweet}\r\n              placeholder=\"Type your tweet here\"\r\n              onChange={handleTweetChange}\r\n            >\r\n            </input>\r\n\r\n            <input \r\n              className=\"name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              placeholder=\"Add your name here\"\r\n              onChange={handleNameChange}\r\n            >\r\n            </input>\r\n\r\n        </form>\r\n        <button className=\"post\" onClick={() => {\r\n          console.log(\"posted\")\r\n          axios.post(\"https://api.vschool.io/karatemple2/todo\", {description: tweet, title: name })\r\n\r\n              .then(response => sendTweet(response.data))\r\n              .catch(error => console.log(error))\r\n              \r\n              } } >Post your tweet!</button>\r\n        \r\n\r\n    </div>\r\n  )\r\n  }\r\nexport default App\r\n",{"ruleId":"16","replacedBy":"17"},{"ruleId":"18","replacedBy":"19"},{"ruleId":"20","severity":1,"message":"21","line":11,"column":10,"nodeType":"22","messageId":"23","endLine":11,"endColumn":14},{"ruleId":"24","severity":1,"message":"25","line":33,"column":4,"nodeType":"26","endLine":33,"endColumn":6,"suggestions":"27"},"no-native-reassign",["28"],"no-negated-in-lhs",["29"],"no-unused-vars","'edit' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["30"],"no-global-assign","no-unsafe-negation",{"desc":"31","fix":"32"},"Update the dependencies array to be: [getData]",{"range":"33","text":"34"},[803,805],"[getData]"]